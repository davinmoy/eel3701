/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.2us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	PAGE_SETUP = "header_footer\
Date: %D\
%f\
Project: %j\
\
Page %p of %P\
Revision: %a\
margin\
0.5\
0.5\
0.5\
0.5\
orientation\
2\
paper_size\
1\
paper_source\
7\
fit_page_wide\
1\
fit_page_tall\
1\
";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2600.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 20.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "A";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "D";
}

SIGNAL("IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("MSA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MSA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSA";
}

SIGNAL("MSA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSA";
}

SIGNAL("MSB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MSB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSB";
}

SIGNAL("MSB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSB";
}

SIGNAL("MSC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MSC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSC";
}

SIGNAL("MSC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSC";
}

SIGNAL("MSC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSC";
}

SIGNAL("PC_INC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("REGA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("REGA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGA";
}

SIGNAL("REGA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGA";
}

SIGNAL("REGA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGA";
}

SIGNAL("REGA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGA";
}

SIGNAL("REGB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("REGB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGB";
}

SIGNAL("REGB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGB";
}

SIGNAL("REGB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGB";
}

SIGNAL("REGB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGB";
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PC_LD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT_[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT_[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT_[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT_[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("/IR_LD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("OUT_")
{
	MEMBERS = "OUT_[3]", "OUT_[2]", "OUT_[1]", "OUT_[0]";
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1080.764;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 679.236;
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.636;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 359.364;
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.377;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 119.623;
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.73;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 119.27;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 36.603;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 3.397;
	}
}

TRANSITION_LIST("D[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("D[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("D[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("D[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("D[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("D[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 221.654;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 98.346;
	}
}

TRANSITION_LIST("D[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 141.671;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 560.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 98.329;
	}
}

TRANSITION_LIST("D[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21.65;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 338.35;
	}
}

TRANSITION_LIST("IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 280.361;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 439.639;
	}
}

TRANSITION_LIST("IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 840.411;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 39.589;
	}
}

TRANSITION_LIST("IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.762;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 279.238;
	}
}

TRANSITION_LIST("MSA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 287.208;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 32.792;
	}
}

TRANSITION_LIST("MSA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.073;
		LEVEL 1 FOR 80.413;
		LEVEL 0 FOR 479.587;
		LEVEL 1 FOR 80.413;
		LEVEL 0 FOR 1039.587;
		LEVEL 1 FOR 80.413;
		LEVEL 0 FOR 117.514;
	}
}

TRANSITION_LIST("MSB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 443.022;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 356.978;
	}
}

TRANSITION_LIST("MSB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 443.044;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 356.956;
	}
}

TRANSITION_LIST("MSC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 287.198;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 32.802;
	}
}

TRANSITION_LIST("MSC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1001.969;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 918.031;
	}
}

TRANSITION_LIST("MSC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 282.261;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 1040.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 517.739;
	}
}

TRANSITION_LIST("PC_INC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.982;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.442;
			LEVEL 0 FOR 79.558;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
		}
		LEVEL 1 FOR 80.442;
		LEVEL 0 FOR 159.558;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 160.442;
		LEVEL 0 FOR 79.558;
		LEVEL 1 FOR 39.018;
	}
}

TRANSITION_LIST("REGA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 920.401;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 119.599;
	}
}

TRANSITION_LIST("REGA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 360.42;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 119.58;
	}
}

TRANSITION_LIST("REGA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.771;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 119.229;
	}
}

TRANSITION_LIST("REGA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.527;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 119.473;
	}
}

TRANSITION_LIST("REGB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1640.056;
		LEVEL 1 FOR 359.944;
	}
}

TRANSITION_LIST("REGB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.355;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 359.645;
	}
}

TRANSITION_LIST("REGB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.021;
		LEVEL 1 FOR 1479.979;
	}
}

TRANSITION_LIST("REGB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1996.0;
	}
}

TRANSITION_LIST("PC_LD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1242.493;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 677.507;
	}
}

TRANSITION_LIST("OUT_[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 362.739;
		LEVEL 1 FOR 1.391;
		LEVEL 0 FOR 480.008;
		LEVEL 1 FOR 78.203;
		LEVEL 0 FOR 1.246;
		LEVEL 1 FOR 79.625;
		LEVEL 0 FOR 400.926;
		LEVEL 1 FOR 0.437;
		LEVEL 0 FOR 0.769;
		LEVEL 1 FOR 77.395;
		LEVEL 0 FOR 1.176;
		LEVEL 1 FOR 398.325;
		LEVEL 0 FOR 81.898;
		LEVEL 1 FOR 35.862;
	}
}

TRANSITION_LIST("OUT_[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 284.997;
		LEVEL 1 FOR 560.351;
		LEVEL 0 FOR 78.033;
		LEVEL 1 FOR 1.747;
		LEVEL 0 FOR 77.926;
		LEVEL 1 FOR 79.076;
		LEVEL 0 FOR 0.924;
		LEVEL 1 FOR 321.943;
		LEVEL 0 FOR 79.083;
		LEVEL 1 FOR 1.048;
		LEVEL 0 FOR 398.253;
		LEVEL 1 FOR 116.619;
	}
}

TRANSITION_LIST("OUT_[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 203.421;
		LEVEL 1 FOR 160.198;
		LEVEL 0 FOR 1.268;
		LEVEL 1 FOR 398.534;
		LEVEL 0 FOR 81.466;
		LEVEL 1 FOR 78.534;
		LEVEL 0 FOR 1.466;
		LEVEL 1 FOR 77.931;
		LEVEL 0 FOR 78.364;
		LEVEL 1 FOR 1.636;
		LEVEL 0 FOR 0.603;
		LEVEL 1 FOR 1.466;
		LEVEL 0 FOR 319.773;
		LEVEL 1 FOR 78.959;
		LEVEL 0 FOR 1.268;
		LEVEL 1 FOR 398.534;
		LEVEL 0 FOR 81.466;
		LEVEL 1 FOR 35.113;
	}
}

TRANSITION_LIST("OUT_[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 202.739;
		LEVEL 1 FOR 82.259;
		LEVEL 0 FOR 477.741;
		LEVEL 1 FOR 241.091;
		LEVEL 0 FOR 0.971;
		LEVEL 1 FOR 78.789;
		LEVEL 0 FOR 0.258;
		LEVEL 1 FOR 321.15;
		LEVEL 0 FOR 477.741;
		LEVEL 1 FOR 117.261;
	}
}

TRANSITION_LIST("/IR_LD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 41.995;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.332;
			LEVEL 0 FOR 79.668;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 80.0;
			}
		}
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.332;
		LEVEL 0 FOR 79.668;
		LEVEL 1 FOR 38.005;
	}
}

TRANSITION_LIST("CIN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "D[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "/IR_LD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "MSA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "MSA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "MSA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "MSB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "MSB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "MSB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "MSC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "MSC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "MSC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "MSC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "PC_INC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "REGA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "REGA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "REGA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "REGA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "REGA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "REGB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "REGB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "REGB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "REGB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "REGB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC_LD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "OUT_[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 40000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 120000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 200000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 280000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 360000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 440000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 520000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 600000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 680000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 760000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 1320000;
	MASTER = TRUE;
}
;
